name: Build
on:
  # Trigger the workflow on pushes to only the 'master' branch (this avoids duplicate checks being run e.g. for dependabot pull requests)
  push:
    branches: [main, dev]
  # Trigger the workflow on any pull request
  pull_request:

jobs:

  glibc-ubuntu:
    name: Build & Test with glibc on Ubuntu
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
      
      # Setup an ipv6 container network so that the
      #     commands that use it work as expected.
      - name: Setup Network
        run: |
          docker network create --ipv6 --subnet=fd00:0bca:85f3:17a0::/64 netv6

      - name: build-test
        run: |
          docker build --network netv6 -f build-glibc.Dockerfile -t glibc:offline --build-arg COMMANDS=ALL .
     
      - name: cmd-test
        run: |
          docker build --network netv6 -f build-glibc.Dockerfile -t glibc:offline --build-arg BUILD_MODE=individual-cmd-test .
      
      - name: file-size
        run: |
          docker build --network netv6 -f build-glibc.Dockerfile -t glibc:offline --build-arg BUILD_MODE=cmd-size .

  glibc-arch:
    name: Build & Test with glibc on Arch Linux
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
      
      # Setup an ipv6 container network so that the
      #     commands that use it work as expected.
      # Podman can't use the network build option as non-root.
      - name: Setup Network
        run: |
          docker network create --ipv6 --subnet=fd00:0bca:85f3:17a0::/64 netv6

      - name: build-test
        run: |
          docker build --network netv6 -f build-glibc-arch.Dockerfile -t glibc-arch:offline --build-arg COMMANDS=ALL .
     
      - name: cmd-test
        run: |
          docker build --network netv6 -f build-glibc-arch.Dockerfile -t glibc-arch:offline --build-arg BUILD_MODE=individual-cmd-test .
      
      - name: file-size
        run: |
          docker build --network netv6 -f build-glibc-arch.Dockerfile -t glibc-arch:offline --build-arg BUILD_MODE=cmd-size .

  clang-musl:
    name: Build & Test with clang / musl
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
      
      # Setup an ipv6 container network so that the
      #     commands that use it work as expected.
      # Podman can't use the network build option as non-root.
      - name: Setup Network
        run: |
          docker network create --ipv6 --subnet=fd00:0bca:85f3:17a0::/64 netv6

      - name: build-test
        run: |
          docker build --network netv6 -f build-clang.Dockerfile -t clang:offline --build-arg COMMANDS=ALL .
      
      - name: cmd-test
        run: |
          docker build --network netv6 -f build-clang.Dockerfile -t clang:offline --build-arg BUILD_MODE=individual-cmd-test .
      
      - name: file-size
        run: |
          docker build --network netv6 -f build-clang.Dockerfile -t clang:offline --build-arg BUILD_MODE=cmd-size .

  musl:
    name: Build & Test with musl
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
      
      # Setup an ipv6 container network so that the
      #     commands that use it work as expected.
      # Podman can't use the network build option as non-root.
      - name: Setup Network
        run: |
          docker network create --ipv6 --subnet=fd00:0bca:85f3:17a0::/64 netv6

      - name: build-test
        run: |
          docker build --network netv6 -f build-musl.Dockerfile -t musl:offline --build-arg COMMANDS=ALL .
      
      - name: cmd-test
        run: |
          docker build --network netv6 -f build-musl.Dockerfile -t musl:offline --build-arg BUILD_MODE=individual-cmd-test .
      
      - name: file-size
        run: |
          docker build --network netv6 -f build-musl.Dockerfile -t musl:offline --build-arg BUILD_MODE=cmd-size .

  dietlibc:
    name: Build & Test with dietlibc
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
      
      # Setup an ipv6 container network so that the
      #     commands that use it work as expected.
      - name: Setup Network
        run: |
          docker network create --ipv6 --subnet=fd00:0bca:85f3:17a0::/64 netv6
      
      - name: build-test
        run: |
          docker build --network netv6 -f build-dietlibc.Dockerfile -t dietlibc:offline --build-arg COMMANDS=ALL .

      - name: cmd-test
        run: |
          docker build --network netv6 -f build-dietlibc.Dockerfile -t dietlibc:offline --build-arg BUILD_MODE=individual-cmd-test .

      - name: file-size
        run: |
          docker build --network netv6 -f build-dietlibc.Dockerfile -t dietlibc:offline --build-arg BUILD_MODE=cmd-size .


  sample:
    name: Run the sample builds with Podman.
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
      
      # Install tools
      - name: Install Required tools
        run: |
          sudo apt-get install podman
      
      - name: build-test
        run: |
          podman build -t local/precision-shell-sample --build-arg FLAGS=INCLUDE_ALL_COMMANDS=1 .
          podman run --rm -t local/precision-shell-sample version


  recipes:
    name: Ensure the recipes build and work as expected.
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
      
      - name: build-test
        run: |
          CONTAINER_RUNNER=docker recipes/_build_all.sh
          CONTAINER_RUNNER=docker recipes/tests/run_all.sh
